/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type Formats = {
  _id: string
  _type: 'formats'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  referenceCode?: string
  slug?: Slug
  color?: Array<{
    name?: string
    images?: Array<{
      asset?: {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
      }
      media?: unknown
      hotspot?: SanityImageHotspot
      crop?: SanityImageCrop
      _type: 'image'
      _key: string
    }>
    _key: string
  }>
}

export type WishlistType = {
  _id: string
  _type: 'wishlistType'
  _createdAt: string
  _updatedAt: string
  _rev: string
  email?: string
  createdAt?: string
  hasOffer?: boolean
  status?: 'esperando' | 'completado' | 'enviado'
}

export type Order = {
  _id: string
  _type: 'order'
  _createdAt: string
  _updatedAt: string
  _rev: string
  userEmail?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'costumer'
  }
  products?: Array<{
    product?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'product'
    }
    quantity?: number
    selectedOption?: string
    _key: string
  }>
  totalAmount?: number
  purchaseDate?: string
  paymentMethod?: string
  status?: 'pendiente' | 'completado' | 'cancelado' | 'procesando'
  shippingAddress?: Array<
    {
      _key: string
    } & Address
  >
  discountCoupon?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'coupon'
  }
}

export type AbandonedCart = {
  _id: string
  _type: 'abandonedCart'
  _createdAt: string
  _updatedAt: string
  _rev: string
  email?: string
  createdAt?: string
  status?: 'esperando' | 'completado' | 'enviado'
}

export type FeatureFlags = {
  _id: string
  _type: 'featureFlags'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  key?: string
  description?: string
  state?: boolean
}

export type NoStockNotifyMe = {
  _id: string
  _type: 'noStockNotifyMe'
  _createdAt: string
  _updatedAt: string
  _rev: string
  email?: string
  products?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'product'
  }>
}

export type ProductDesigns = {
  _id: string
  _type: 'productDesigns'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  referenceCode?: string
  formats?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'formats'
  }>
  slug?: Slug
  content?: Array<
    | {
        children?: Array<{
          marks?: Array<string>
          text?: string
          _type: 'span'
          _key: string
        }>
        style?:
          | 'normal'
          | 'h1'
          | 'h2'
          | 'h3'
          | 'h4'
          | 'h5'
          | 'h6'
          | 'blockquote'
        listItem?: 'bullet' | 'number'
        markDefs?: Array<{
          href?: string
          _type: 'link'
          _key: string
        }>
        level?: number
        _type: 'block'
        _key: string
      }
    | {
        asset?: {
          _ref: string
          _type: 'reference'
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
        }
        media?: unknown
        hotspot?: SanityImageHotspot
        crop?: SanityImageCrop
        _type: 'image'
        _key: string
      }
    | ({
        _key: string
      } & ExternalImage)
  >
  excerpt?: string
}

export type Link = {
  _type: 'link'
  link?: string
  text?: string
}

export type Address = {
  _type: 'address'
  firstName?: string
  address1?: string
  address2?: string
  city?: string
  postcode?: string
  state?: string
  email?: string
  phone?: string
  IdDocument?: string
  companyName?: string
  createdAt?: string
}

export type Costumer = {
  _id: string
  _type: 'costumer'
  _createdAt: string
  _updatedAt: string
  _rev: string
  email?: string
  firstName?: string
  lastName?: string
  password?: string
  userName?: string
  IdDocument?: string
  companyName?: string
  billingAddress?: Array<
    {
      _key: string
    } & Address
  >
  shippingAddresses?: Array<
    {
      _key: string
    } & Address
  >
  isPayingCustomer?: boolean
  isGuest?: boolean
  avatarUrl?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    media?: unknown
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
}

export type HomePage = {
  _id: string
  _type: 'homePage'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  mainBanner?: Array<{
    image?: {
      asset?: {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
      }
      media?: unknown
      hotspot?: SanityImageHotspot
      crop?: SanityImageCrop
      _type: 'image'
    }
    link?: Slug
    _type: 'banner'
    _key: string
  }>
  mainCategory?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'productCategory'
  }
  ads?: Array<{
    image?: {
      asset?: {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
      }
      media?: unknown
      hotspot?: SanityImageHotspot
      crop?: SanityImageCrop
      _type: 'image'
    }
    link?: string
    _type: 'banner'
    _key: string
  }>
  tertiaryCategory?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'productCategory'
  }
  youtubeVideos?: Array<{
    title?: string
    videoId?: string
    _type: 'video'
    _key: string
  }>
  productListBanner?: {
    banner?: {
      asset?: {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
      }
      media?: unknown
      hotspot?: SanityImageHotspot
      crop?: SanityImageCrop
      _type: 'image'
    }
    link?: string
  }
}

export type SubscriberNewsletter = {
  _id: string
  _type: 'subscriberNewsletter'
  _createdAt: string
  _updatedAt: string
  _rev: string
  email?: string
  subscribedDate?: string
  active?: boolean
}

export type Coupon = {
  _id: string
  _type: 'coupon'
  _createdAt: string
  _updatedAt: string
  _rev: string
  code?: string
  discount?: number
  discount_type?: 'percentage' | 'fixed'
  expires_at?: string
  usage_limit?: number
  usage_count?: number
}

export type ProductCategory = {
  _id: string
  _type: 'productCategory'
  _createdAt: string
  _updatedAt: string
  _rev: string
  description?: Array<{
    children?: Array<{
      marks?: Array<string>
      text?: string
      _type: 'span'
      _key: string
    }>
    style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote'
    listItem?: 'bullet' | 'number'
    markDefs?: Array<{
      href?: string
      _type: 'link'
      _key: string
    }>
    level?: number
    _type: 'block'
    _key: string
  }>
  name?: string
  slug?: Slug
  main?: boolean
  parent?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'productCategory'
  }
}

export type Product = {
  _id: string
  _type: 'product'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  sku?: string
  referenceCode?: string
  slug?: Slug
  price?: number
  sale?: number
  designs?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'productDesigns'
  }>
  sizes?: Array<string>
  content?: Array<
    | {
        children?: Array<{
          marks?: Array<string>
          text?: string
          _type: 'span'
          _key: string
        }>
        style?:
          | 'normal'
          | 'h1'
          | 'h2'
          | 'h3'
          | 'h4'
          | 'h5'
          | 'h6'
          | 'blockquote'
        listItem?: 'bullet' | 'number'
        markDefs?: Array<{
          href?: string
          _type: 'link'
          _key: string
        }>
        level?: number
        _type: 'block'
        _key: string
      }
    | {
        asset?: {
          _ref: string
          _type: 'reference'
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
        }
        media?: unknown
        hotspot?: SanityImageHotspot
        crop?: SanityImageCrop
        _type: 'image'
        _key: string
      }
    | ({
        _key: string
      } & ExternalImage)
  >
  excerpt?: string
  productCategories?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'productCategory'
  }>
  relatedProducts?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'product'
  }>
}

export type Tag = {
  _id: string
  _type: 'tag'
  _createdAt: string
  _updatedAt: string
  _rev: string
  name?: string
  slug?: Slug
}

export type Post = {
  _id: string
  _type: 'post'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  slug?: Slug
  date?: string
  modified?: string
  status?:
    | 'publish'
    | 'future'
    | 'draft'
    | 'pending'
    | 'private'
    | 'trash'
    | 'auto-draft'
    | 'inherit'
  content?: Array<
    | {
        children?: Array<{
          marks?: Array<string>
          text?: string
          _type: 'span'
          _key: string
        }>
        style?:
          | 'normal'
          | 'h1'
          | 'h2'
          | 'h3'
          | 'h4'
          | 'h5'
          | 'h6'
          | 'blockquote'
        listItem?: 'bullet' | 'number'
        markDefs?: Array<{
          href?: string
          _type: 'link'
          _key: string
        }>
        level?: number
        _type: 'block'
        _key: string
      }
    | {
        asset?: {
          _ref: string
          _type: 'reference'
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
        }
        media?: unknown
        hotspot?: SanityImageHotspot
        crop?: SanityImageCrop
        _type: 'image'
        _key: string
      }
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        _key: string
        [internalGroqTypeReferenceTo]?: 'externalImage'
      }
  >
  excerpt?: string
  featuredMedia?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    media?: unknown
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
  sticky?: boolean
  author?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'author'
  }
  tags?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'tag'
  }>
}

export type ExternalImage = {
  _type: 'externalImage'
  url?: string
}

export type Author = {
  _id: string
  _type: 'author'
  _createdAt: string
  _updatedAt: string
  _rev: string
  name?: string
  description?: string
  avatar?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    media?: unknown
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
}

export type MediaTag = {
  _id: string
  _type: 'media.tag'
  _createdAt: string
  _updatedAt: string
  _rev: string
  name?: Slug
}

export type SanityImagePaletteSwatch = {
  _type: 'sanity.imagePaletteSwatch'
  background?: string
  foreground?: string
  population?: number
  title?: string
}

export type SanityImagePalette = {
  _type: 'sanity.imagePalette'
  darkMuted?: SanityImagePaletteSwatch
  lightVibrant?: SanityImagePaletteSwatch
  darkVibrant?: SanityImagePaletteSwatch
  vibrant?: SanityImagePaletteSwatch
  dominant?: SanityImagePaletteSwatch
  lightMuted?: SanityImagePaletteSwatch
  muted?: SanityImagePaletteSwatch
}

export type SanityImageDimensions = {
  _type: 'sanity.imageDimensions'
  height?: number
  width?: number
  aspectRatio?: number
}

export type SanityImageHotspot = {
  _type: 'sanity.imageHotspot'
  x?: number
  y?: number
  height?: number
  width?: number
}

export type SanityImageCrop = {
  _type: 'sanity.imageCrop'
  top?: number
  bottom?: number
  left?: number
  right?: number
}

export type SanityFileAsset = {
  _id: string
  _type: 'sanity.fileAsset'
  _createdAt: string
  _updatedAt: string
  _rev: string
  originalFilename?: string
  label?: string
  title?: string
  description?: string
  altText?: string
  sha1hash?: string
  extension?: string
  mimeType?: string
  size?: number
  assetId?: string
  uploadId?: string
  path?: string
  url?: string
  source?: SanityAssetSourceData
}

export type SanityImageAsset = {
  _id: string
  _type: 'sanity.imageAsset'
  _createdAt: string
  _updatedAt: string
  _rev: string
  originalFilename?: string
  label?: string
  title?: string
  description?: string
  altText?: string
  sha1hash?: string
  extension?: string
  mimeType?: string
  size?: number
  assetId?: string
  uploadId?: string
  path?: string
  url?: string
  metadata?: SanityImageMetadata
  source?: SanityAssetSourceData
}

export type SanityImageMetadata = {
  _type: 'sanity.imageMetadata'
  location?: Geopoint
  dimensions?: SanityImageDimensions
  palette?: SanityImagePalette
  lqip?: string
  blurHash?: string
  hasAlpha?: boolean
  isOpaque?: boolean
}

export type Geopoint = {
  _type: 'geopoint'
  lat?: number
  lng?: number
  alt?: number
}

export type Slug = {
  _type: 'slug'
  current?: string
  source?: string
}

export type SanityAssetSourceData = {
  _type: 'sanity.assetSourceData'
  name?: string
  id?: string
  url?: string
}

export type AllSanitySchemaTypes =
  | Formats
  | WishlistType
  | Order
  | AbandonedCart
  | FeatureFlags
  | NoStockNotifyMe
  | ProductDesigns
  | Link
  | Address
  | Costumer
  | HomePage
  | SubscriberNewsletter
  | Coupon
  | ProductCategory
  | Product
  | Tag
  | Post
  | ExternalImage
  | Author
  | MediaTag
  | SanityImagePaletteSwatch
  | SanityImagePalette
  | SanityImageDimensions
  | SanityImageHotspot
  | SanityImageCrop
  | SanityFileAsset
  | SanityImageAsset
  | SanityImageMetadata
  | Geopoint
  | Slug
  | SanityAssetSourceData
export declare const internalGroqTypeReferenceTo: unique symbol
// Source: ./src/sanity/queries/index.ts
// Variable: GET_USER_FOR_AUTH
// Query: *[_type =='costumer' && email == $email][0]{  "id": _id,   userName,   firstName,  lastName,  companyName,  isGuest,  password,    email,   "avatar": avatarUrl.asset->{    "url": url,  },}
export type GET_USER_FOR_AUTHResult = {
  id: string
  userName: string | null
  firstName: string | null
  lastName: string | null
  companyName: string | null
  isGuest: boolean | null
  password: string | null
  email: string | null
  avatar: {
    url: string | null
  } | null
} | null
// Variable: GET_PRODUCTS_BY_CATEGORY
// Query: *[  _type == "product" && count(productCategories[]->slug.current[@ in $type]) == 2][0] {  "designs": designs[]->{    "id": _id,    title,    "price": ^.price,    "price": ^.price,    "sizes": ^.sizes,    "colors": formats[0]->color[].name,    offer,    "featuredMedia": formats[0]->{      title,      "images": color[0].images[].asset->{        "url": url,        "blur": metadata.lqip,      }    }  }}
export type GET_PRODUCTS_BY_CATEGORYResult = {
  designs: Array<{
    id: string
    title: string | null
    price: number | null
    sizes: Array<string> | null
    colors: Array<string | null> | null
    offer: null
    featuredMedia: {
      title: string | null
      images: Array<{
        url: string | null
        blur: string | null
      }>
    }
  }>
}

// Query TypeMap
import '@sanity/client'
declare module 'next-sanity' {
  interface SanityQueries {
    '*[_type ==\'costumer\' && email == $email][0]{\n  "id": _id,\n   userName,\n   firstName,\n  lastName,\n  companyName,\n  isGuest,\n  password,\n    email,\n   "avatar": avatarUrl.asset->{\n    "url": url,\n  },\n}': GET_USER_FOR_AUTHResult
    '*[\n  _type == "product" && count(productCategories[]->slug.current[@ in $type]) == 2\n][0] {\n  "designs": designs[]->{\n    "id": _id,\n    title,\n    "price": ^.price,\n    "price": ^.price,\n    "sizes": ^.sizes,\n    "colors": formats[0]->color[].name,\n    offer,\n    "featuredMedia": formats[0]->{\n      title,\n      "images": color[0].images[].asset->{\n        "url": url,\n        "blur": metadata.lqip,\n      }\n    }\n  }\n}': GET_PRODUCTS_BY_CATEGORYResult
  }
}
